function greet(unicorn,favColor){
  alert("Hello, my name is "+unicorn+" and my favorite color is "+favColor+".")
}
//greet("john","blue")
//greet("Jane","green")




function tripleMe(x){
  return  3*x
}
let myFavoriteNumber = tripleMe(12)
alert(myFavoriteNumber)



let cat = {
  name: "Fluffy",
  age:4,
  foods:{
    favorite:"tuna",
    leastFavorite:"oranges"
  },
  eyeColor:"blue",
  meow(){
    alert("Meooooow")
  }
}

cat.foods.favorite                 -calls from the cat, inside the food the favorite
cat.meow()                         -calls the mewo function/action





document.addEventListener("click", hi)

function hi(){
  alert("Hello there!")
}





let myFavoriteNumber=[9,2,7,3,6,15]
let myWords=["red","orange","yellow"]
let myPets=[{name:"meowsolat", species:"cat"},{name:"Barkssolat", species:"dog"}]

myWords.push("green")
console.log(myWords)

myWords.splice(0,2)
console.log(myWords)

console.log(myFavoriteNumber[2])
console.log(myPets[1].species)





let strawberryCount=5

if(strawberryCount>9){
  document.write("Congrats!")
} else{
  document.write("Sorry, we don't ship orders that small.")
}






function createMultiplier(multiplier){
  return function(x){
    return x*multiplier
  }
}

let doubleMe=createMultiplier(2)
let tripleMe=createMultiplier(3)
let quadrupleMe=createMultiplier(4)

document.write(doubleMe(10))




let myColors=['red','orange','yellow','green']

myColors.forEach(saySomethingNice)

function saySomethingNice(color){
  document.write("the color "+color+" is a grate color.<br>")
  
}




let pets=[
  {name:"Meowsolot",species:"cat", age:2},
   {name:"Barksolot",species:"dog", age:8},
   {name:"Purrsolot",species:"cat", age:3},
]
console.log(pets.push({name:"Puppster", species:"dog", age:1}))
let ourTest= pets.map(nameOnly)

function nameOnly(x){
  return x.name                         <-writes the name out
}

let dogs=pets.filter(onlyDogs)             

function onlyDogs(x){
  return x.species == "dog"            <-from the list, selects the dogs
}

function onlyBabies(x){
  return x.age<3                       <-selects ANINALS that are less than 3y. old
}

let babyDogNames=pets.filter(onlyDogs).filter(onlyBabies).map(nameOnly)         <-firslt, filters the dog, then from the result, the ones that are younger than 3y., then writes only the name of the result
console.log(babyDogNames)




let myName ="brad"

function amazingFunction(){
  let myName="Brad Junor"
  if (2+2==4){
    let myName="Brad the 3rd"
    console.log("inside the if statement",myName)          3 completely separate values, even if they have the same identifier label
  }
  console.log("inside our function",myName)                the let statement creates a variable in the current local scope
}                                                          it doesn;t matter that we used the name in the outer scope

amazingFunction()
console.log("inside the global scope", myName)

// it will write  out inside the if statement Brad the 3rd, inside out function Brad Junor, inside the global scope Brad




let john={
  firstName: "John",
  lastName:"Doe",
  driveCar(){
    function imAFunctionNotAMethod(){
      console.log(this)
    }
    imAFunctionNotAMethod()
    console.log(this.firstName+" "+this.lastName+" is driving a car.")
  }
  
}

john.driveCar()

function breathe(){
  console.log(this.firstName+" "+this.lastName+" just inhaled and exhaled.")
}

breathe.call(john)


document.addEventListener("click", function(){
  alert("Thank you for clicking")
})
=same as, but cleaner
document.addEventListener("click", ()=>alert("Thank you for clicking"))



let myNumbers =[10,500,200]
let doubleNumbers=myNumbers.map((x){
  return x*2
})
console.log(doubleNumbers)

=same as, but cleaner

let myNumbers =[10,500,200]
let doubleNumbers=myNumbers.map(x=>x*2)
console.log(doubleNumbers)




let john={
  firstName: "John",
  lastName:"Doe",
  driveCar(){
    let imAFunctionNotAMethod = () =>console.log(this)
    imAFunctionNotAMethod()
    console.log(this.firstName+" "+this.lastName+" is driving a car.")
  }
  
}

john.driveCar()



let myName="Brad";console.log(`hello, my name is ${myName} and the sky is blue`)




HTML   

<h1>To-Do App</h1>

<form id="ourForm">
  <input id="ourField" type="text" autocomplete="off">
  <button>Create item</button>
  </form>

<h3>Need to Do </3>
<ul id="ourList">
  
  
</ul>

JAVASCRIPT

let ourForm=document.getElementById("ourForm")
let ourField=document.getElementById("ourField")
let ourList=document.getElementById("ourList")
ourForm.addEventListener("submit",(e)=>{
  e.preventDefault()
  createItem(ourField.value)
})

function createItem(x){
  let ourHTML=`<li>${x} <button onclick="deleteItem(this)">Delete</button></li>`
  ourList.insertAdjacentHTML("beforeend",ourHTML)
  ourField.value=""
  ourField.focus()
}

function deleteItem(elementToDelete){
  elementToDelete.parentElement.remove()
}
